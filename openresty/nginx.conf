user  nginx nginx;
worker_processes  auto;

error_log  /data/log/nginx/error.log warn;
pid        /data/log/nginx/nginx.pid;


events {
    use epoll;
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types; #文件扩展名与文件类型映射表
    default_type  application/octet-stream; #默认文件类型

    # 413 Request Too Large
    client_max_body_size 20m;

    #504 TIMEOUT
    fastcgi_read_timeout 3s; #指定nginx接受后端fastcgi响应请求超时时间 （指已完成两次握手后nginx接受fastcgi响应请求超时时间）

    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。
    #fastcgi_connect_timeout 60s; #指定nginx与后端fastcgi server连接超时时间
    #fastcgi_send_timeout 60s; #指定nginx向后端传送请求超时时间（指已完成两次握手后向fastcgi传送请求超时时间）
    #fastcgi_buffer_size 4k|8k; #指定nginx读取fastcgi响应第一部分需要用多大的缓冲区，这个值表示将使用一个64kb的缓冲区响应第一部分应答（应答头）可以设置为fastcgi_buffers缓存区大小
    #fastcgi_buffers 8 4k|8k; #指nginx需要用多大的缓冲区缓冲fastcgi的应答请求（整个应答），如果一个php脚本所产生的页面大小为256kb，那么会分配4个64kb缓冲区来缓存，如果页面大于256kb
    #，那么大于256kb的部分会缓存到fastcgi_temp指定的路径中，但是因为内存中数据处理远快于磁盘， 所以这个值应该为站点中php所产生的页面大小的中间值， 如果站点大部分php脚本产生的页面为：256kb，
    #那么可以设置成成"8 16k  4 64k"
    #fastcgi_busy_buffers_size 8k|16k; #整个数据请求需要多大的缓存区，建议设置为fastcgi_buffers值的两倍
    #fastcgi_temp_file_write_size 64k; #写入缓存文件使用多大的数据块，默认值是fastcgi_buffer值的2倍


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
